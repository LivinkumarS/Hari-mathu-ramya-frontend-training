JavaScript(.js)
--------------

What is Programming Language?
-------------------------------------
it is set of instructions that a computer can understand and follow to perform specific tasks.

c, python, c++, JS, Java, Ruby, Csharp....

Versatile ---> having multiple uses.(Versatile Programming Language.)
Interpretted Programming Language ---> Code will get executed line byline directly without compiling it to a machine code.

opposite (compiler)


(HTML, CSS)---> Static Websites.(cant respond to user)
(JS)---> Dynamic Websites.(responds to user's action).


Syntax
-------
syntax is set of rules that defines how the code should be written.
";"---> Good practice to put this symbol after every instructions.

Printing "Hello world"
-----------------------
console.log("Hello World")
Run JS Code ---> Using Node,  Browser(JS Engines).

Attaching JS into HTML---> script tag. (<script src="./app.js"></script>).


Variables
----------------
Variables are containers for storing data values.

3 keywords to initiate Variables
-------------------------------------
var ---> mutable(value can be changed)
let ---> mutable
const--> immutable(value cannot be changed). 

syntax 
-------
keyword variable_name = data;


Data Types
------------
set of information is called data. 

Primitive, Reference.
------------------------

Primitive----> Stores Values Directly in variables.
let num=10;
let num1=num; // copying 10(new data)

String 
--------
Sequence of characters.
"", '', ``(backtick. we would use it to create (template literals))

concatination---> Joining to string (+)

String Methods
---------------
1) length---> used to find the length of a string.
2) toUpperCase()---> converts to upperCase
3) toLowerCase()---> converts to lowerCase
4)charAt(index number)---> gives the charav=cter at the specific index.
5)includes("string")---> boolean value that says whether the given string is included in the string or not 

Number
-------
Numerical Values including both integers and floats.

integers----> -10, 10, 4, 0.
Floats------>3.14, 1.000.

Number Methods 
---------------
1)toFixed(2)---> Rounds and keeps n decimal point. 1.544535432.
2)toString()---> number to string conversion.
3)parseInt(string)---> string into number.
4)parseFloat(string)----> fetch the float out of a string


Boolean
--------
Boolean Represents Logical Value. (True or False).

undefined
----------
Variable Has been declared but not assigned a value.

null
----
intentional absence of any value.


Reference DataTypes:
------------------------

Invoking(calling)---> name();

Functions
-----------
A function is a reusable block of code designed to perform a specific task.

Function Declaration (named function)
----------------------------------------
syntax---> function name(){ // block code }

hoisting---> default hoisting (you can access this function before creating it)

Function Expression 
-----------------------
syntax---> const name= () => {// block of code}.

hoisting--> not hoisted defaultly

Arrow Function 
---------------
syntax---> ()=>{// block of code}
no name,
one time use

Parameters and Arguments
------------------------------
P--> variables listed in the function definition.
a--> actual values passed when calling the function.

Return Keyword.
----------------
1) breaks the function.
2) to return a value to the caller.


Callback function 
----------------------
CB---> assigning a function as another functions parameter


Array 
-------
used to store multiple values in a single variable.
syntax---> [val1, val2, val3...]

accessing Methods
-----------------
arr.length--> length of an array
arr[ind]--> to access the elements.

Methods that alter the original array
----------------------------------------
1)push(val)----> adds new element at the end
2)pop()---> removes the last element
3)unshift(val)--> adds new element at beginning
4)shift()---> removes the first element
5)splice(strt index, del count, ........values)
6)sort()--> arranging the elements (asc, desc)  a-b(asc)b-a(desc)
7)reverse()---> reversing the array.

Methods that dont alter the original array 
-----------------------------------------------
1)concat()----> joins to arrays.
2)slice(str, end) ---> extracts part of an array.
3)join()----> returns a string of array elements.
4)indexOf(ele) --> returns index of given element.
5)includes(ele) ---> returns boolean.

6)map()---> returns a new array with transformed values.
7)filter()---> returns a new array with filtered values.
8)reduce()---> returns a single value


Operations
_______________

Arithmetic Operation
----------------------
Addition----> + 
Subtraction---> -
Multiplication-->*
Division---> /
modulus---> % (reminder)
Exponentiation--> ** (power)

Increment--> pre increment (++(prefix)), post (++(suffix))
Decrement--> pre Decrement (--(prefix)), post (--(suffix))


Assignment operation 
------------------------
=  ---> assigning value
+=  --->add and assign
-=  --->sub and assign
*=  --->mul and assign
/=  --->div and assign
%=  --->mod and assign
**=  --->exponent and assign

Comparison operator (boolean)
--------------------
== ---> (loose equal) --> comparest two value whether those are same or not.
=== ---> (trict equal)---> comparest two value whether those are same or not (dataType also matters)
!= --> not equal
> --> gt
< --> lt

>= --> ge
<= -->le 

BODMAS---> B--> Brackets, O-->Of, D---> Division,  M---> Mul, A---> Add, S---> Sub.


Logical Operator (boolean values)
----------------

AND (&&) ----> both are true.
OR (||) ---> anyone is true
NOT (!)----> just reverse a single boolean


Ternary Operator
---------------------

execute code according to the given condition

syntax
---------
condition ?  expression1  : expression2;


Conditional Clauses
--------------------
if and else---> keywords.

syntax
---------

if(condition){
    // block of code
}else if{
    //block of code
}else{
    //block of  code
}


Truthy and Falsy Values 
----------------------------
it determines hoew the expression is evoluated in boolean context.

if("656"){
}

truthy values 
--------------
true,
"hjhdfjhf"---> non-empty string
[]
{}
76756---> otherthan 0

falsy values 
------------
false
""--> empty string,
undefined,
null,
0,
NaN


Loops
-------
Loops are used to repeat a block of code multiple timmes until the specified condition is met.

for Loop
-------------
Used when the number of iteration is known.

syntax
----------

for(initialization ; condition; increment){
    // block of code
}


While  Loop 
--------------
when the number of iteration is not known.

syntax 
-----------
while(condition){
    //block of code
}

Do While Loop 
----------------
it will execute the block of code atleast once.

syntax
-------
do {
    //code
} while(condition)


for...in and for.. of.

Keywords---> break(breaks the loop), continue(stops the current teration)